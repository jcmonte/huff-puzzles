
/** 
 *  FOO_BAR HUFF EXERCISE
 *
 *  Majority of ethereum contracts hold logic divide this logic into functions which users can specify and call to execute a particular logic without clashing into the other
 *  
 *  The task is to write within the `MAIN` macro below, huff code that mimics 2 solidity functions. 
 *      - One named `foo()` that simply returns 2,
 *      - the second named `bar()` that simply returns 3.
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

 #define function foo() payable returns(uint256)
 #define function bar() payable returns(uint256)


#define macro MAIN() = takes(0) returns(0) {
    0x0 calldataload 0xe0 shr

    dup1 __FUNC_SIG(foo) eq jmpFoo jumpi
    dup1 __FUNC_SIG(bar) eq jmpBar jumpi

    0x0 revert

    jmpFoo:
        0x2 0x0 mstore
        0x20 0x0 return

    jmpBar:
        0x3 0x0 mstore
        0x20 0x0 return
}